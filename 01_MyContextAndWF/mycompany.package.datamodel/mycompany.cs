//------------------------------------------------------------------------------
// <auto-generated>
//    Dieser Code wurde aus einer Vorlage generiert.
//
//    Manuelle Änderungen an dieser Datei führen möglicherweise zu unerwartetem Verhalten Ihrer Anwendung.
//    Manuelle Änderungen an dieser Datei werden überschrieben, wenn der Code neu generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using gip.core.datamodel;

[assembly: EdmSchemaAttribute()]
#region EDM-Beziehungsmetadaten

[assembly: EdmRelationshipAttribute("MyCompanyModel", "FK_InOrderPos_InOrderID", "InOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mycompany.package.datamodel.InOrder), "InOrderPos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mycompany.package.datamodel.InOrderPos), true)]
[assembly: EdmRelationshipAttribute("MyCompanyModel", "FK_InOrderPos_MaterialID", "Material", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(mycompany.package.datamodel.Material), "InOrderPos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(mycompany.package.datamodel.InOrderPos), true)]

#endregion

namespace mycompany.package.datamodel
{
    #region Kontexte
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    public partial class MyCompanyEntities : ObjectContext
    {
        #region Konstruktoren
    
        /// <summary>
        /// Initialisiert ein neues MyCompanyEntities-Objekt mithilfe der in Abschnitt 'MyCompanyEntities' der Anwendungskonfigurationsdatei gefundenen Verbindungszeichenfolge.
        /// </summary>
        public MyCompanyEntities() : base("name=MyCompanyEntities", "MyCompanyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues MyCompanyEntities-Objekt.
        /// </summary>
        public MyCompanyEntities(string connectionString) : base(connectionString, "MyCompanyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues MyCompanyEntities-Objekt.
        /// </summary>
        public MyCompanyEntities(EntityConnection connection) : base(connection, "MyCompanyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partielle Methoden
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet-Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<InOrder> InOrder
        {
            get
            {
                if ((_InOrder == null))
                {
                    _InOrder = base.CreateObjectSet<InOrder>("InOrder");
                }
                return _InOrder;
            }
        }
        private ObjectSet<InOrder> _InOrder;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<InOrderPos> InOrderPos
        {
            get
            {
                if ((_InOrderPos == null))
                {
                    _InOrderPos = base.CreateObjectSet<InOrderPos>("InOrderPos");
                }
                return _InOrderPos;
            }
        }
        private ObjectSet<InOrderPos> _InOrderPos;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Material> Material
        {
            get
            {
                if ((_Material == null))
                {
                    _Material = base.CreateObjectSet<Material>("Material");
                }
                return _Material;
            }
        }
        private ObjectSet<Material> _Material;

        #endregion

        #region AddTo-Methoden
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'InOrder'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToInOrder(InOrder inOrder)
        {
            base.AddObject("InOrder", inOrder);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'InOrderPos'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToInOrderPos(InOrderPos inOrderPos)
        {
            base.AddObject("InOrderPos", inOrderPos);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Material'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToMaterial(Material material)
        {
            base.AddObject("Material", material);
        }

        #endregion

    }

    #endregion

    #region Entitäten
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyCompanyModel", Name="InOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InOrder : VBEntityObject , IInsertInfo,IUpdateInfo
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues InOrder-Objekt.
        /// </summary>
        /// <param name="inOrderID">Anfangswert der Eigenschaft InOrderID.</param>
        /// <param name="inOrderNo">Anfangswert der Eigenschaft InOrderNo.</param>
        /// <param name="inOrderDate">Anfangswert der Eigenschaft InOrderDate.</param>
        /// <param name="insertName">Anfangswert der Eigenschaft InsertName.</param>
        /// <param name="insertDate">Anfangswert der Eigenschaft InsertDate.</param>
        /// <param name="updateName">Anfangswert der Eigenschaft UpdateName.</param>
        /// <param name="updateDate">Anfangswert der Eigenschaft UpdateDate.</param>
        public static InOrder CreateInOrder(global::System.Guid inOrderID, global::System.String inOrderNo, global::System.DateTime inOrderDate, global::System.String insertName, global::System.DateTime insertDate, global::System.String updateName, global::System.DateTime updateDate)
        {
            InOrder inOrder = new InOrder();
            inOrder.InOrderID = inOrderID;
            inOrder.InOrderNo = inOrderNo;
            inOrder.InOrderDate = inOrderDate;
            inOrder.InsertName = insertName;
            inOrder.InsertDate = insertDate;
            inOrder.UpdateName = updateName;
            inOrder.UpdateDate = updateDate;
            return inOrder;
        }

        #endregion

        #region Einfache Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.Guid InOrderID
        {
            get
            {
                return _InOrderID;
            }
            set
            {
                if (_InOrderID != value)
                {
                    OnInOrderIDChanging(value);
                    ReportPropertyChanging("InOrderID");
                    _InOrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InOrderID");
                    OnInOrderIDChanged();
                }
            }
        }
        private global::System.Guid _InOrderID;
        partial void OnInOrderIDChanging(global::System.Guid value);
        partial void OnInOrderIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.String InOrderNo
        {
            get
            {
                return _InOrderNo;
            }
            set
            {
                OnInOrderNoChanging(value);
                ReportPropertyChanging("InOrderNo");
                _InOrderNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InOrderNo");
                OnInOrderNoChanged();
            }
        }
        private global::System.String _InOrderNo;
        partial void OnInOrderNoChanging(global::System.String value);
        partial void OnInOrderNoChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.DateTime InOrderDate
        {
            get
            {
                return _InOrderDate;
            }
            set
            {
                OnInOrderDateChanging(value);
                ReportPropertyChanging("InOrderDate");
                _InOrderDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InOrderDate");
                OnInOrderDateChanged();
            }
        }
        private global::System.DateTime _InOrderDate;
        partial void OnInOrderDateChanging(global::System.DateTime value);
        partial void OnInOrderDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public  global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public override global::System.String XMLConfig
        {
            get
            {
                return _XMLConfig;
            }
            set
            {
                OnXMLConfigChanging(value);
                ReportPropertyChanging("XMLConfig");
                _XMLConfig = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("XMLConfig");
                OnXMLConfigChanged();
            }
        }
        private global::System.String _XMLConfig;
        partial void OnXMLConfigChanging(global::System.String value);
        partial void OnXMLConfigChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.String InsertName
        {
            get
            {
                return _InsertName;
            }
            set
            {
                OnInsertNameChanging(value);
                ReportPropertyChanging("InsertName");
                _InsertName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InsertName");
                OnInsertNameChanged();
            }
        }
        private global::System.String _InsertName;
        partial void OnInsertNameChanging(global::System.String value);
        partial void OnInsertNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.DateTime InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private global::System.DateTime _InsertDate;
        partial void OnInsertDateChanging(global::System.DateTime value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.String UpdateName
        {
            get
            {
                return _UpdateName;
            }
            set
            {
                OnUpdateNameChanging(value);
                ReportPropertyChanging("UpdateName");
                _UpdateName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UpdateName");
                OnUpdateNameChanged();
            }
        }
        private global::System.String _UpdateName;
        partial void OnUpdateNameChanging(global::System.String value);
        partial void OnUpdateNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyCompanyModel", "FK_InOrderPos_InOrderID", "InOrderPos")]
        public EntityCollection<InOrderPos> InOrderPos_InOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InOrderPos>("MyCompanyModel.FK_InOrderPos_InOrderID", "InOrderPos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InOrderPos>("MyCompanyModel.FK_InOrderPos_InOrderID", "InOrderPos", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyCompanyModel", Name="InOrderPos")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InOrderPos : VBEntityObject , IInsertInfo,IUpdateInfo
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues InOrderPos-Objekt.
        /// </summary>
        /// <param name="inOrderPosID">Anfangswert der Eigenschaft InOrderPosID.</param>
        /// <param name="inOrderID">Anfangswert der Eigenschaft InOrderID.</param>
        /// <param name="sequence">Anfangswert der Eigenschaft Sequence.</param>
        /// <param name="materialID">Anfangswert der Eigenschaft MaterialID.</param>
        /// <param name="targetQuantity">Anfangswert der Eigenschaft TargetQuantity.</param>
        /// <param name="insertName">Anfangswert der Eigenschaft InsertName.</param>
        /// <param name="insertDate">Anfangswert der Eigenschaft InsertDate.</param>
        /// <param name="updateName">Anfangswert der Eigenschaft UpdateName.</param>
        /// <param name="updateDate">Anfangswert der Eigenschaft UpdateDate.</param>
        public static InOrderPos CreateInOrderPos(global::System.Guid inOrderPosID, global::System.Guid inOrderID, global::System.Int32 sequence, global::System.Guid materialID, global::System.Double targetQuantity, global::System.String insertName, global::System.DateTime insertDate, global::System.String updateName, global::System.DateTime updateDate)
        {
            InOrderPos inOrderPos = new InOrderPos();
            inOrderPos.InOrderPosID = inOrderPosID;
            inOrderPos.InOrderID = inOrderID;
            inOrderPos.Sequence = sequence;
            inOrderPos.MaterialID = materialID;
            inOrderPos.TargetQuantity = targetQuantity;
            inOrderPos.InsertName = insertName;
            inOrderPos.InsertDate = insertDate;
            inOrderPos.UpdateName = updateName;
            inOrderPos.UpdateDate = updateDate;
            return inOrderPos;
        }

        #endregion

        #region Einfache Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.Guid InOrderPosID
        {
            get
            {
                return _InOrderPosID;
            }
            set
            {
                if (_InOrderPosID != value)
                {
                    OnInOrderPosIDChanging(value);
                    ReportPropertyChanging("InOrderPosID");
                    _InOrderPosID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InOrderPosID");
                    OnInOrderPosIDChanged();
                }
            }
        }
        private global::System.Guid _InOrderPosID;
        partial void OnInOrderPosIDChanging(global::System.Guid value);
        partial void OnInOrderPosIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.Guid InOrderID
        {
            get
            {
                return _InOrderID;
            }
            set
            {
                OnInOrderIDChanging(value);
                ReportPropertyChanging("InOrderID");
                _InOrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InOrderID");
                OnInOrderIDChanged();
            }
        }
        private global::System.Guid _InOrderID;
        partial void OnInOrderIDChanging(global::System.Guid value);
        partial void OnInOrderIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.Guid MaterialID
        {
            get
            {
                return _MaterialID;
            }
            set
            {
                OnMaterialIDChanging(value);
                ReportPropertyChanging("MaterialID");
                _MaterialID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaterialID");
                OnMaterialIDChanged();
            }
        }
        private global::System.Guid _MaterialID;
        partial void OnMaterialIDChanging(global::System.Guid value);
        partial void OnMaterialIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.Double TargetQuantity
        {
            get
            {
                return _TargetQuantity;
            }
            set
            {
                OnTargetQuantityChanging(value);
                ReportPropertyChanging("TargetQuantity");
                _TargetQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TargetQuantity");
                OnTargetQuantityChanged();
            }
        }
        private global::System.Double _TargetQuantity;
        partial void OnTargetQuantityChanging(global::System.Double value);
        partial void OnTargetQuantityChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public override global::System.String XMLConfig
        {
            get
            {
                return _XMLConfig;
            }
            set
            {
                OnXMLConfigChanging(value);
                ReportPropertyChanging("XMLConfig");
                _XMLConfig = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("XMLConfig");
                OnXMLConfigChanged();
            }
        }
        private global::System.String _XMLConfig;
        partial void OnXMLConfigChanging(global::System.String value);
        partial void OnXMLConfigChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.String InsertName
        {
            get
            {
                return _InsertName;
            }
            set
            {
                OnInsertNameChanging(value);
                ReportPropertyChanging("InsertName");
                _InsertName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InsertName");
                OnInsertNameChanged();
            }
        }
        private global::System.String _InsertName;
        partial void OnInsertNameChanging(global::System.String value);
        partial void OnInsertNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.DateTime InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private global::System.DateTime _InsertDate;
        partial void OnInsertDateChanging(global::System.DateTime value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.String UpdateName
        {
            get
            {
                return _UpdateName;
            }
            set
            {
                OnUpdateNameChanging(value);
                ReportPropertyChanging("UpdateName");
                _UpdateName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UpdateName");
                OnUpdateNameChanged();
            }
        }
        private global::System.String _UpdateName;
        partial void OnUpdateNameChanging(global::System.String value);
        partial void OnUpdateNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyCompanyModel", "FK_InOrderPos_InOrderID", "InOrder")]
        public InOrder InOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InOrder>("MyCompanyModel.FK_InOrderPos_InOrderID", "InOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InOrder>("MyCompanyModel.FK_InOrderPos_InOrderID", "InOrder").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InOrder> InOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InOrder>("MyCompanyModel.FK_InOrderPos_InOrderID", "InOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InOrder>("MyCompanyModel.FK_InOrderPos_InOrderID", "InOrder", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyCompanyModel", "FK_InOrderPos_MaterialID", "Material")]
        public Material Material
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("MyCompanyModel.FK_InOrderPos_MaterialID", "Material").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("MyCompanyModel.FK_InOrderPos_MaterialID", "Material").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Material> MaterialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("MyCompanyModel.FK_InOrderPos_MaterialID", "Material");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Material>("MyCompanyModel.FK_InOrderPos_MaterialID", "Material", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MyCompanyModel", Name="Material")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Material : VBEntityObject , IInsertInfo,IUpdateInfo,IDeleteInfo
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Material-Objekt.
        /// </summary>
        /// <param name="materialID">Anfangswert der Eigenschaft MaterialID.</param>
        /// <param name="materialNo">Anfangswert der Eigenschaft MaterialNo.</param>
        /// <param name="materialName1">Anfangswert der Eigenschaft MaterialName1.</param>
        /// <param name="insertName">Anfangswert der Eigenschaft InsertName.</param>
        /// <param name="insertDate">Anfangswert der Eigenschaft InsertDate.</param>
        /// <param name="updateName">Anfangswert der Eigenschaft UpdateName.</param>
        /// <param name="updateDate">Anfangswert der Eigenschaft UpdateDate.</param>
        public static Material CreateMaterial(global::System.Guid materialID, global::System.String materialNo, global::System.String materialName1, global::System.String insertName, global::System.DateTime insertDate, global::System.String updateName, global::System.DateTime updateDate)
        {
            Material material = new Material();
            material.MaterialID = materialID;
            material.MaterialNo = materialNo;
            material.MaterialName1 = materialName1;
            material.InsertName = insertName;
            material.InsertDate = insertDate;
            material.UpdateName = updateName;
            material.UpdateDate = updateDate;
            return material;
        }

        #endregion

        #region Einfache Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.Guid MaterialID
        {
            get
            {
                return _MaterialID;
            }
            set
            {
                if (_MaterialID != value)
                {
                    OnMaterialIDChanging(value);
                    ReportPropertyChanging("MaterialID");
                    _MaterialID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MaterialID");
                    OnMaterialIDChanged();
                }
            }
        }
        private global::System.Guid _MaterialID;
        partial void OnMaterialIDChanging(global::System.Guid value);
        partial void OnMaterialIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.String MaterialNo
        {
            get
            {
                return _MaterialNo;
            }
            set
            {
                OnMaterialNoChanging(value);
                ReportPropertyChanging("MaterialNo");
                _MaterialNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MaterialNo");
                OnMaterialNoChanged();
            }
        }
        private global::System.String _MaterialNo;
        partial void OnMaterialNoChanging(global::System.String value);
        partial void OnMaterialNoChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.String MaterialName1
        {
            get
            {
                return _MaterialName1;
            }
            set
            {
                OnMaterialName1Changing(value);
                ReportPropertyChanging("MaterialName1");
                _MaterialName1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MaterialName1");
                OnMaterialName1Changed();
            }
        }
        private global::System.String _MaterialName1;
        partial void OnMaterialName1Changing(global::System.String value);
        partial void OnMaterialName1Changed();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public override global::System.String XMLConfig
        {
            get
            {
                return _XMLConfig;
            }
            set
            {
                OnXMLConfigChanging(value);
                ReportPropertyChanging("XMLConfig");
                _XMLConfig = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("XMLConfig");
                OnXMLConfigChanged();
            }
        }
        private global::System.String _XMLConfig;
        partial void OnXMLConfigChanging(global::System.String value);
        partial void OnXMLConfigChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.String InsertName
        {
            get
            {
                return _InsertName;
            }
            set
            {
                OnInsertNameChanging(value);
                ReportPropertyChanging("InsertName");
                _InsertName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InsertName");
                OnInsertNameChanged();
            }
        }
        private global::System.String _InsertName;
        partial void OnInsertNameChanging(global::System.String value);
        partial void OnInsertNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.DateTime InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private global::System.DateTime _InsertDate;
        partial void OnInsertDateChanging(global::System.DateTime value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.String UpdateName
        {
            get
            {
                return _UpdateName;
            }
            set
            {
                OnUpdateNameChanging(value);
                ReportPropertyChanging("UpdateName");
                _UpdateName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UpdateName");
                OnUpdateNameChanged();
            }
        }
        private global::System.String _UpdateName;
        partial void OnUpdateNameChanging(global::System.String value);
        partial void OnUpdateNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public  global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public  Nullable<global::System.DateTime> DeleteDate
        {
            get
            {
                return _DeleteDate;
            }
            set
            {
                OnDeleteDateChanging(value);
                ReportPropertyChanging("DeleteDate");
                _DeleteDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteDate");
                OnDeleteDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeleteDate;
        partial void OnDeleteDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDeleteDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public  global::System.String DeleteName
        {
            get
            {
                return _DeleteName;
            }
            set
            {
                OnDeleteNameChanging(value);
                ReportPropertyChanging("DeleteName");
                _DeleteName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeleteName");
                OnDeleteNameChanged();
            }
        }
        private global::System.String _DeleteName;
        partial void OnDeleteNameChanging(global::System.String value);
        partial void OnDeleteNameChanged();

        #endregion

        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MyCompanyModel", "FK_InOrderPos_MaterialID", "InOrderPos")]
        public EntityCollection<InOrderPos> InOrderPos_Material
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InOrderPos>("MyCompanyModel.FK_InOrderPos_MaterialID", "InOrderPos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InOrderPos>("MyCompanyModel.FK_InOrderPos_MaterialID", "InOrderPos", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
